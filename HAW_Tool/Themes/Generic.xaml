<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:HAW_Tool" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" xmlns:HAW_Tool_HAW="clr-namespace:HAW_Tool.HAW" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:Native="clr-namespace:HAW_Tool.HAW.Native" xmlns:Depending="clr-namespace:HAW_Tool.HAW.Depending"
    xmlns:UserControls="clr-namespace:HAW_Tool.UserControls">

    <sys:Double x:Key="RasterH">90</sys:Double>
    <sys:Double x:Key="RasterV">100</sys:Double>
    <SolidColorBrush x:Key="PR" Color="AliceBlue" />

    <Style x:Key="ScrollableItemsControl" TargetType="{x:Type ItemsControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <ItemsPresenter Width="250" Height="250" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Depending:TimeToCoord x:Key="TimeToWidth" Multiplier="{StaticResource RasterH}" AsWidth="True" />
    <HAW_Tool_HAW:ToStringConverter x:Key="ShortTime" Format="{}{0:t}" />
    <Depending:TimeToCoord x:Key="TimeToLeft" Multiplier="{StaticResource RasterH}" />
    <Depending:TimeToCoord x:Key="TimeToTop" Multiplier="{StaticResource RasterV}" />
    <Depending:TimeToThicknessConverter x:Key="TimeToLeftMargin" Multiplier="{StaticResource RasterH}" />
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <Style x:Key="HAWGroupBoxStyle" TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="#D5DFE5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Width="Auto" Height="Auto" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border x:Name="Header" Padding="10,3,3,5" Grid.Column="1" Grid.Row="0" Grid.RowSpan="1" Margin="0">
                                <Border.Background>
                                    <SolidColorBrush Color="{DynamicResource DarkenDown20}"/>
                                </Border.Background>
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True"/>
                            </Border>
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="Auto" Grid.Row="1" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="UglyScrollViewerLeft" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Column="1" Grid.Row="1"/>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Column="1" Grid.Row="0" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" Cursor="Arrow" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="0" Grid.Row="0" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.AutomationId="VerticalScrollBar" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource UglyVerticalScrollbar}" Width="17" MinWidth="10"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar" Cursor="Arrow" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.AutomationId="HorizontalScrollBar" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="UglyScrollViewerRight" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Column="0" Grid.Row="1"/>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Column="0" Grid.Row="0" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" Cursor="Arrow" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.AutomationId="VerticalScrollBar" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource UglyVerticalScrollbar}" Width="17" MinWidth="10"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar" Cursor="Arrow" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="1" Grid.Row="1" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.AutomationId="HorizontalScrollBar" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}"/>
        </Grid>
    </ControlTemplate>
    <Style x:Key="UglyThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Margin="2" Width="Auto" Height="Auto" Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="2">
                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Width="5">
                            <Line X1="0" X2="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}}}" Y1="0" Y2="0" Margin="0,0,0,3" StrokeThickness="2" >
                                <Line.Stroke>
                                    <SolidColorBrush Color="{DynamicResource DarkenDown40}"/>
                                </Line.Stroke>
                            </Line>
                            <Line X1="0" X2="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}}}" Y1="0" Y2="0" Margin="0" StrokeThickness="2" >
                                <Line.Stroke>
                                    <SolidColorBrush Color="{DynamicResource DarkenDown40}"/>
                                </Line.Stroke>
                            </Line>
                            <Line X1="0" X2="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}}}" Y1="0" Y2="0" Margin="0,3,0,0" StrokeThickness="2" >
                                <Line.Stroke>
                                    <SolidColorBrush Color="{DynamicResource DarkenDown40}"/>
                                </Line.Stroke>
                            </Line>
                        </StackPanel>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource DarkenDown80}"/>
                        </Border.BorderBrush>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CompactView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CompactView}">
                    <ScrollViewer>
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ItemsControl ItemsSource="{TemplateBinding ItemsSource}" ItemTemplate="{DynamicResource WeekCompact}" />
                        </Border>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="EventCompactGradient" EndPoint="0.978,0.717" StartPoint="0.043,0.297" SpreadMethod="Reflect">
        <GradientStop Color="#FF14172E"/>
        <GradientStop Color="White" Offset="0.432"/>
        <GradientStop Color="#FF141834" Offset="1"/>
    </LinearGradientBrush>

    <DataTemplate x:Key="EventCompact">
        <Canvas Background="{x:Null}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid DataContext="{Binding}">
                <!--<Canvas.Top>
                    <MultiBinding Converter="{StaticResource TimeToTop}" ConverterParameter="RowIndex">
                        <Binding Path="HasChanges" />
                        <Binding />
                    </MultiBinding>
                </Canvas.Top>-->
                <Canvas.Left>
                    <MultiBinding Converter="{StaticResource TimeToLeft}">
                        <Binding Path="HasChanges" />
                        <Binding />
                    </MultiBinding>
                </Canvas.Left>
                <Grid.Width>
                    <MultiBinding Converter="{StaticResource TimeToWidth}">
                        <Binding Path="HasChanges" />
                        <Binding />
                    </MultiBinding>
                </Grid.Width>
                <Border BorderThickness="1" CornerRadius="0" Margin="0,1" Background="{DynamicResource DarkenDown20Brush}" Height="Auto" VerticalAlignment="Center">
                    <Border.BorderBrush>
                        <SolidColorBrush Color="{DynamicResource DarkenDown80}"/>
                    </Border.BorderBrush>
                    <Label Content="{Binding}" FontSize="9.333" />
                </Border>
            </Grid>
        </Canvas>
    </DataTemplate>

    <DataTemplate x:Key="DayCompact">
        <Border Background="{DynamicResource DarkenDown20Brush}" BorderThickness="0,1" Margin="5,1">
            <Border.BorderBrush>
                <SolidColorBrush Color="{DynamicResource DarkenDown40}"/>
            </Border.BorderBrush>
            <StackPanel Orientation="Horizontal">
                <Label Content="{Binding Date}" />
                <ItemsControl ItemsSource="{Binding Events}" ItemTemplate="{DynamicResource EventCompact}" />
            </StackPanel>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="WeekCompact">
        <Border Margin="2" Background="{DynamicResource DarkenDown20Brush}" BorderBrush="Red" BorderThickness="1" CornerRadius="2">
            <StackPanel>
                <Label Content="{Binding LabelShort}" />
                <ItemsControl ItemsSource="{Binding Days}" ItemTemplate="{DynamicResource DayCompact}"/>
            </StackPanel>
        </Border>
    </DataTemplate>

    <Style TargetType="{x:Type UserControls:RangeSlider}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UserControls:RangeSlider}">
                    <Canvas Background="{x:Null}">
                		<Thumb Canvas.Left="{Binding LeftThumbPos, RelativeSource={RelativeSource TemplatedParent}}" x:Name="PART_LeftThumb" Width="10" Height="20" d:LayoutOverrides="Width" />
                        <Thumb Canvas.Right="{Binding RightThumbPos, RelativeSource={RelativeSource TemplatedParent}}" x:Name="PART_RightThumb" Width="10" Height="20" d:LayoutOverrides="Width" />
                	</Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
