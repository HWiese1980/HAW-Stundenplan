<UserControl x:Class="HAW_Tool.UserControls.EventControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:SeveQsCustomControls="clr-namespace:SeveQsCustomControls;assembly=SeveQsCustomControls"
             xmlns:UserControls="clr-namespace:HAW_Tool.UserControls" mc:Ignorable="d" 
             x:Name="MyEventControl"
             xmlns:Converters="clr-namespace:HAW_Tool.Converters"
             xmlns:Controls="clr-namespace:AC.AvalonControlsLibrary.Controls;assembly=AvalonControlsLibrary"
             Loaded="MyEventControl_Loaded"
             xmlns:Depending="clr-namespace:HAW_Tool.HAW.Depending" d:DesignHeight="140.2" d:DesignWidth="388">
    <UserControl.Style>
        <Style TargetType="{x:Type UserControls:EventControl}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsDirty}" Value="True">
                    <Setter Property="BackBorderBrush" Value="#FFFFAA00" />
                    <Setter Property="BackBorderBackground" Value="#88FFFF00" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsObligatory}" Value="True">
                    <Setter Property="BackBorderBackground" Value="#44FF0000" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                    <Setter Property="Opacity" Value="0.3" />
                </DataTrigger>
                <DataTrigger Binding="{Binding TakesPlace}" Value="False">
                    <Setter Property="BackBorderBackground" Value="#88FF0000" />
                    <Setter Property="StrikeOutVisibility" Value="Visible" />
                    <Setter Property="Opacity" Value="0.6" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter Property="EventBorderBrush" Value="White"/>
                    <Setter Property="EventBorderBackground" Value="#22FFFFFF" />
                </DataTrigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="EventBorderOpacity" Value="1.0" />
                    <Setter Property="BackBorderBackground" Value="#FFFFFFFF"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="btvc" />
        <Style x:Key="EventThumb" TargetType="{x:Type Thumb}">
        	<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        	<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Thumb}">
        				<Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}">
        					<Border.Background>
        						<SolidColorBrush Color="{DynamicResource LightenUp20}"/>
        					</Border.Background>
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualStateGroup.Transitions>
        								<VisualTransition GeneratedDuration="0:0:0.3" To="MouseOver">
        									<VisualTransition.GeneratedEasingFunction>
        										<BackEase EasingMode="EaseOut"/>
        									</VisualTransition.GeneratedEasingFunction>
        								</VisualTransition>
        								<VisualTransition GeneratedDuration="0:0:1" To="Normal">
        									<VisualTransition.GeneratedEasingFunction>
        										<BounceEase EasingMode="EaseOut" Bounces="5"/>
        									</VisualTransition.GeneratedEasingFunction>
        								</VisualTransition>
        								<VisualTransition GeneratedDuration="0:0:0.3" To="Pressed">
        									<VisualTransition.GeneratedEasingFunction>
        										<BackEase EasingMode="EaseOut"/>
        									</VisualTransition.GeneratedEasingFunction>
        								</VisualTransition>
        							</VisualStateGroup.Transitions>
        							<VisualState x:Name="Normal"/>
        							<VisualState x:Name="MouseOver">
        								<Storyboard>
        									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
        										<EasingColorKeyFrame KeyTime="0" Value="{StaticResource LightenUp50}"/>
        									</ColorAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Pressed">
        								<Storyboard>
        									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
        										<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ActiveBorder}"/>
        									</ColorAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Disabled">
        								<Storyboard>
        									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
        										<EasingColorKeyFrame KeyTime="0" Value="{StaticResource DarkenDown20}"/>
        									</ColorAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        				</Border>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
    </UserControl.Resources>
    <Grid Tag="EventControl">
        <Canvas Background="{x:Null}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid Margin="0 25 0 0" >
                <Canvas.Top>
                    <MultiBinding Converter="{StaticResource TimeToTop}" ConverterParameter="RowIndex.Row">
                        <Binding />
                        <Binding Path="(Depending:RowIndex.Row)" />
                        <Binding Path="From" />
                        <Binding Path="Till" />
                    </MultiBinding>
                </Canvas.Top>
                <Canvas.Left>
                    <MultiBinding Converter="{StaticResource TimeToLeft}">
                        <Binding />
                        <Binding Path="From" />
                        <Binding Path="Till" />
                    </MultiBinding>
                </Canvas.Left>
                <Grid.Width>
                    <MultiBinding Converter="{StaticResource TimeToWidth}">
                        <Binding />
                        <Binding Path="From" />
                        <Binding Path="Till" />
                    </MultiBinding>
                </Grid.Width>
                <SeveQsCustomControls:StrikeOut Opacity="0.6" Panel.ZIndex="100" StrikeOutThickness="3.0" Visibility="{Binding StrikeOutVisibility, ElementName=MyEventControl}" x:Name="strikeOut" />
                <Border Background="{Binding BackBorderBackground, ElementName=MyEventControl}" CornerRadius="0">
                    <Border.OpacityMask>
                        <VisualBrush Visual="{Binding ElementName=border}"/>
                    </Border.OpacityMask>
                </Border>
                <Border x:Name="border" TextElement.FontSize="9" CornerRadius="0" BorderBrush="{Binding EventBorderBrush, ElementName=MyEventControl}" BorderThickness="2,2,2,10" Background="{Binding EventBorderBackground, ElementName=MyEventControl}">
                    <Grid MinHeight="{StaticResource EventMinHeight}">
                        <Label x:Name="from" Content="{Binding From, Converter={StaticResource ShortTime}, Mode=Default}" Foreground="White" d:LayoutOverrides="Width, Height" VerticalAlignment="Center" HorizontalAlignment="Left" RenderTransformOrigin="0.5,0.5" Padding="0" Margin="0" >
                            <Label.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="-90"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Label.RenderTransform>
                        </Label>
                        <Label x:Name="till" Content="{Binding Till, Converter={StaticResource ShortTime}, Mode=Default}" Foreground="White" d:LayoutOverrides="Width, Height" VerticalAlignment="Center" HorizontalAlignment="Right" RenderTransformOrigin="0.5,0.5" Padding="0" Margin="0" >
                            <Label.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="-90"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Label.RenderTransform>
                        </Label>
                        <Label x:Name="codeGross" Content="{Binding Code}" FontWeight="Bold" Foreground="#05FFFFFF" FontStretch="Expanded" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" FontSize="20" />
                        <Label x:Name="codeKlein" Content="{Binding Code}" FontWeight="Bold" Foreground="White" d:LayoutOverrides="Width, Height" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0" FontSize="10.667" />
                        <Label Content="{Binding Tutor}" Foreground="White" d:LayoutOverrides="Width, Height" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" FontSize="10.667" />
                        <Label Content="{Binding Room}" Foreground="White" d:LayoutOverrides="Width, Height" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0" FontSize="10.667" />
                    </Grid>
                </Border>
                <Thumb DragDelta="LeftDelta"  VerticalAlignment="Center" Height="20" HorizontalAlignment="Left" Width="3" Cursor="SizeWE" Style="{DynamicResource EventThumb}" />
                <Thumb DragDelta="RightDelta" VerticalAlignment="Center" Height="20" HorizontalAlignment="Right" Width="3" Cursor="SizeWE" Style="{DynamicResource EventThumb}" />
                <Thumb Margin="23 0 23 0" DragDelta="BothDelta" VerticalAlignment="Bottom" Height="7" Cursor="ScrollWE" Style="{DynamicResource EventThumb}" />
            </Grid>
        </Canvas>
    </Grid>
</UserControl>
